/*
Deployment script for HollywoodTest

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "HollywoodTest"
:setvar DefaultFilePrefix "HollywoodTest"
:setvar DefaultDataPath "C:\Users\sifiso\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"
:setvar DefaultLogPath "C:\Users\sifiso\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Creating [dbo].[pr_DeleteTournament]...';


GO
CREATE PROCEDURE [dbo].[pr_DeleteTournament]
	@IsDeleted BIT OUT,
	@TournamentID BIGINT
AS
BEGIN
	SET NOCOUNT ON;
	IF EXISTS (SELECT TOP 1 TournamentID FROM [dbo].[Tournament] WHERE TournamentID = @TournamentID)
		BEGIN
			DELETE 
			FROM [dbo].[Tournament]
			WHERE TournamentID = @TournamentID
			SET @IsDeleted = 1
		END
	ELSE
		BEGIN
			SET @IsDeleted = 0
		END
END
GO
PRINT N'Creating [dbo].[pr_UpdateTournament]...';


GO
CREATE PROCEDURE [dbo].[pr_UpdateTournament]
	@IsUpdated BIT OUT,
	@TournamentID BIGINT,
	@TournamentName NVARCHAR(200)
AS
BEGIN
	SET NOCOUNT ON;
	IF EXISTS (SELECT TOP 1 TournamentID FROM [dbo].[Tournament] WHERE TournamentID = @TournamentID )
		BEGIN
			UPDATE [dbo].[Tournament]
			SET TournamentName = @TournamentName
			WHERE TournamentID = @TournamentID
			SET @IsUpdated = 'True'
		END
	ELSE
		BEGIN
			SET @IsUpdated = 'False'
		END
END
GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/
CREATE TABLE #eventDetailStatus (EventDetailsStatusName NVARCHAR(50))
INSERT INTO #eventDetailStatus
VALUES ('Active'),
	   ('Scratched'),
	   ('Closed')
--Insert into physical table
INSERT INTO [dbo].[EventDetailStatus] (EventDetailsStatusName)
SELECT [EventDetailsStatusName] FROM #eventDetailStatus
WHERE [EventDetailsStatusName] NOT IN (SELECT [EventDetailsStatusName] FROM [dbo].[EventDetailStatus] WITH (NOLOCK))
DROP TABLE #eventDetailStatus

GO

GO
PRINT N'Update complete.';


GO
